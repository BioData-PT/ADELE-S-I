#!/bin/sh

if [ -z "$PGPASSWORD" ]; then
    echo "PGPASSWORD must be set"
    exit 1
fi

if [ -z "$PGSSLCERT" ] || [ -z "$PGSSLKEY" ] ||[ -z "$PGSSLROOTCERT" ]; then
    echo "PGSSLCERT, PGSSLKEY and PGSSLROOTCERT must be set"
    exit 1
fi

if [ -z "$MQUSER" ] || [ -z "$MQPASSWORD" ]; then
    echo "MQUSER and MQPASSWORD must be set"
    exit 1
fi

for CMD in curl jq psql; do
    command -v "$CMD" > /dev/null || (echo "$CMD not found" && exit 1)
done

export PGSSLMODE=verify-ca

for n in download finalize inbox ingest mapper verify; do
    echo "creating credentials for: $n"
    ## password and permissions for MQ
    mqpass=$(head -c 12 /dev/urandom | base64 | tr -d '\+')
    body_data=$(jq -n -c --arg password "$mqpass" --arg tags none '$ARGS.named')
    curl -s --cacert "$PGSSLROOTCERT" -u "$MQUSER:$MQPASSWORD" -X PUT "http://localhost:15671/api/users/$n" -H "content-type:application/json" -d "${body_data}"
    curl -s --cacert "$PGSSLROOTCERT" -u "$MQUSER:$MQPASSWORD" -X PUT "http://localhost:15671/api/permissions/sda/$n" -H "content-type:application/json" -d '{"configure":"","write":"sda","read":".*"}'
    sed -i s/"$n"_BROKER_PASSWORD=.*/"$n"_BROKER_PASSWORD="$mqpass"/ .env

    ## password and permissions for DB
    dbpass=$(head -c 12 /dev/urandom | base64 | tr -d '\+')
    psql -U postgres -h localhost -d sda -c "ALTER ROLE $n LOGIN PASSWORD '$dbpass';"
    sed -i s/"$n"_DB_PASSWORD=.*/"$n"_DB_PASSWORD="$dbpass"/ .env
done